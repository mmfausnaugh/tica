#
#Copyright (c) 2021 Michael Fausnaugh
#
#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the Software), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.
#
#THE SOFTWARE IS PROVIDED AS IS, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.

from .GainModel import GainModel
        
class LinearityModel(object):
    """
    class properties--hard code the gain per cam/ccd/slice
    """
    gain_loss ={'cam1':{'ccd1':{"A":5.91e-07,
                                "B":6.17e-07,
                                "C":5.72e-07,
                                "D":5.85e-07},
                        'ccd2':{"A":6.63e-07,
                                "B":6.36e-07,
                                "C":6.07e-07,
                                "D":6.19e-07},
                        'ccd3':{"A":6.41e-07,
                                "B":6.12e-07,
                                "C":6.11e-07,
                                "D":6.36e-07},
                        'ccd4':{"A":5.49e-07,
                                "B":5.82e-07, 
                                "C":5.90e-07, 
                                "D":5.97e-07} 
                    },              
                'cam2':{'ccd1':{"A":6.21e-07,
                                "B":5.82e-07,
                                "C":5.57e-07,
                                "D":6.21e-07},
                        'ccd2':{"A":6.41e-07,
                                "B":6.30e-07,
                                "C":6.34e-07,
                                "D":6.44e-07},
                        'ccd3':{"A":5.95e-07,
                                "B":5.85e-07,
                                "C":6.02e-07,
                                "D":6.15e-07},
                        'ccd4':{"A":5.72e-07,
                                "B":5.85e-07,
                                "C":5.96e-07,
                                "D":6.05e-07}
                    } ,             
                'cam3':{'ccd1':{"A":5.16e-07,
                                "B":6.17e-07,
                                "C":5.28e-07,
                                "D":5.64e-07},
                        'ccd2':{"A":5.57e-07,
                                "B":5.18e-07,
                                "C":5.98e-07,
                                "D":6.42e-07},
                        'ccd3':{"A":5.89e-07,
                                "B":5.86e-07,
                                "C":5.72e-07,
                                "D":5.96e-07},
                        'ccd4':{"A":6.03e-07,
                                "B":5.09e-07,
                                "C":5.65e-07,
                                "D":6.36e-07}
                    } ,             
                'cam4':{'ccd1':{"A":6.29e-07,
                                "B":5.87e-07,
                                "C":6.31e-07,
                                "D":6.36e-07},
                        'ccd2':{"A":5.97e-07,
                                "B":5.20e-07,
                                "C":5.86e-07,
                                "D":5.17e-07},
                        'ccd3':{"A":5.71e-07,
                                "B":6.10e-07,
                                "C":5.94e-07,
                                "D":6.21e-07},
                        'ccd4':{"A":5.78e-07,
                                "B":6.02e-07,
                                "C":5.97e-07,
                                "D":6.28e-07}
                     }
                }

    gain_gain ={'cam1':{'ccd1':{"A":6.96e-07,
                                "B":7.22e-07,
                                "C":6.65e-07,
                                "D":6.99e-07},
                        'ccd2':{"A":7.69e-07,
                                "B":7.32e-07,
                                "C":7.06e-07,
                                "D":7.31e-07},
                        'ccd3':{"A":7.69e-07,
                                "B":7.22e-07,
                                "C":7.35e-07,
                                "D":7.75e-07},
                        'ccd4':{"A":6.62e-07,
                                "B":7.06e-07, 
                                "C":7.23e-07, 
                                "D":7.25e-07} 
                    },              
                'cam2':{'ccd1':{"A":7.74e-07,
                                "B":7.01e-07,
                                "C":6.80e-07,
                                "D":7.60e-07},
                        'ccd2':{"A":7.27e-07,
                                "B":7.32e-07,
                                "C":7.47e-07,
                                "D":7.73e-07},
                        'ccd3':{"A":7.27e-07,
                                "B":7.06e-07,
                                "C":7.35e-07,
                                "D":7.51e-07},
                        'ccd4':{"A":7.14e-07,
                                "B":7.19e-07,
                                "C":7.44e-07,
                                "D":7.58e-07}
                    } ,             
                'cam3':{'ccd1':{"A":6.24e-07,
                                "B":7.56e-07,
                                "C":6.46e-07,
                                "D":6.85e-07},
                        'ccd2':{"A":6.51e-07,
                                "B":5.81e-07,
                                "C":7.08e-07,
                                "D":7.86e-07},
                        'ccd3':{"A":6.94e-07,
                                "B":6.79e-07,
                                "C":6.68e-07,
                                "D":7.10e-07},
                        'ccd4':{"A":7.16e-07,
                                "B":5.87e-07,
                                "C":6.81e-07,
                                "D":7.84e-07}
                    } ,             
                'cam4':{'ccd1':{"A":7.71e-07,
                                "B":6.86e-07,
                                "C":7.75e-07,
                                "D":7.66e-07},
                        'ccd2':{"A":7.24e-07,
                                "B":6.02e-07,
                                "C":7.04e-07,
                                "D":6.09e-07},
                        'ccd3':{"A":7.11e-07,
                                "B":7.58e-07,
                                "C":7.38e-07,
                                "D":7.78e-07,},
                        'ccd4':{"A":6.90e-07,
                                "B":7.27e-07,
                                "C":7.16e-07,
                                "D":7.75e-07}
                    }
            }
    def __init__(self,modelfile):
        pass
        
class SpocLinearity(object):
    """
    For spoc, we need the coefficients of the 2nd order polynomial,
    the scale factor for the input, and the offset of the input
    """
    coefficients ={'cam1':{'ccd1':{"A":[2.57322e-05, 823.226, 1.0,-0.0374716,0.0482595    ],
                                  "B":[2.61974e-05, 911.529, 1.0,-0.0321036,0.0472505    ],
                                  "C":[2.57796e-05, 861.398, 1.0,-0.0299381,0.0410301    ],
                                  "D":[2.60366e-05, 891.072, 1.0,-0.0359014,0.0415674    ]},
                          'ccd2':{"A":[2.65022e-05, 1003.89, 1.0,-0.0413358,0.0683761    ],
                                  "B":[2.61363e-05, 1019.84, 1.0,-0.031161,0.0534969     ],
                                  "C":[2.60988e-05, 893.095, 1.0,-0.0271916,0.0394685    ],
                                  "D":[2.60189e-05, 814.683, 1.0,-0.0377196,0.0490083    ]},
                          'ccd3':{"A":[2.59058e-05, 919.8, 1.0,-0.0393967,0.0525883      ],
                                  "B":[2.57147e-05, 976.537, 1.0,-0.0374545,0.0528702    ],
                                  "C":[2.57727e-05, 900.984, 1.0,-0.0389461,0.045786     ],
                                  "D":[2.59371e-05, 892.831, 1.0,-0.0454134,0.0524089    ]},
                          'ccd4':{"A":[2.6866e-05, 981.681, 1.0,-0.0507134,0.0562926     ],
                                  "B":[2.58883e-05, 965.747, 1.0,-0.0446359,0.0489371    ], 
                                  "C":[2.60191e-05, 775.707, 1.0,-0.0492108,0.0501099    ], 
                                  "D":[2.61775e-05, 683.515, 1.0,-0.0486886,0.0519709    ]} 
                    },                
                  'cam2':{'ccd1':{"A":[2.58758e-05, 914.283, 1.0,-0.0581077,0.0606467    ],
                                  "B":[2.59669e-05, 988.901, 1.0,-0.0439921,0.0497028    ],
                                  "C":[2.61721e-05, 952.948, 1.0,-0.0447996,0.043987     ],
                                  "D":[2.57771e-05, 969.021, 1.0,-0.0502004,0.0565481    ]},
                          'ccd2':{"A":[2.70836e-05, 1040.49, 1.0,-0.0332812,0.0576825    ],
                                  "B":[2.61238e-05, 1017.51, 1.0,-0.0369586,0.0572305    ],
                                  "C":[2.57524e-05, 904.56, 1.0,-0.0421833,0.0603724     ],
                                  "D":[2.57664e-05, 840.23, 1.0,-0.0475555,0.0606503     ]},
                          'ccd3':{"A":[2.58508e-05, 916.877, 1.0,-0.0502073,0.0547111    ],
                                  "B":[2.56261e-05, 975.949, 1.0,-0.0452499,0.05191      ],
                                  "C":[2.5947e-05, 892.329, 1.0,-0.0495091,0.0542741     ],
                                  "D":[2.58622e-05, 917.551, 1.0,-0.0508815,0.0561949    ]},
                          'ccd4':{"A":[2.60322e-05, 1008.83, 1.0,-0.0542148,0.0518747    ],
                                  "B":[2.59428e-05, 1013.74, 1.0,-0.0494182,0.0509864    ],
                                  "C":[2.57109e-05, 836.186, 1.0,-0.0563779,0.0553216    ],
                                  "D":[2.62769e-05, 765.641, 1.0,-0.0565943,0.0538907    ]}
                    } ,               
                  'cam3':{'ccd1':{"A":[2.65518e-05, 871.101, 1.0,-0.0485704,0.0507719    ],
                                  "B":[2.72475e-05, 940.163, 1.0,-0.0480001,0.0522887    ],
                                  "C":[2.57254e-05, 897.272, 1.0,-0.0524578,0.0547793    ],
                                  "D":[2.79272e-05, 916.949, 1.0,-0.0485449,0.0506356    ]},
                          'ccd2':{"A":[2.61573e-05, 983.104, 1.0,-0.0478297,0.0641121    ],
                                  "B":[2.62336e-05, 985.372, 1.0,-0.034413,0.0537814     ],
                                  "C":[2.6387e-05, 840.47, 1.0,-0.0448661,0.0600269      ],
                                  "D":[2.6297e-05, 768.779, 1.0,-0.0530794,0.0639607     ]},
                          'ccd3':{"A":[2.65843e-05, 874.064, 1.0,-0.0464842,0.0612928    ],
                                  "B":[2.69553e-05, 956.817, 1.0,-0.0368783,0.0512449    ],
                                  "C":[2.58179e-05, 858.373, 1.0,-0.038546,0.0531443     ],
                                  "D":[2.65562e-05, 874.34, 1.0,-0.0504402,0.0637462     ]},
                          'ccd4':{"A":[2.8381e-05, 1014.94, 1.0,-0.0397823,0.0471796     ],
                                  "B":[2.59052e-05, 994.259, 1.0,-0.03949,0.0520631      ],
                                  "C":[2.59421e-05, 813.502, 1.0,-0.0446166,0.0497614    ],
                                  "D":[2.578e-05, 722.269, 1.0,-0.0535503,0.0608501      ]}
                    } ,               
                  'cam4':{'ccd1':{"A":[2.57391e-05, 878.855, 1.0,-0.0496681,0.0562381    ],
                                  "B":[2.78096e-05, 952.233, 1.0,-0.0255654,0.0330627    ],
                                  "C":[2.56824e-05, 901.636, 1.0,-0.0501126,0.0565003    ],
                                  "D":[2.60466e-05, 913.999, 1.0,-0.0448427,0.0563647    ]},
                          'ccd2':{"A":[2.69813e-05, 977.398, 1.0,-0.0398781,0.0423855    ],
                                  "B":[2.73665e-05, 967.056, 1.0,-0.0313423,0.0379962    ],
                                  "C":[2.61286e-05, 847.83, 1.0,-0.0394111,0.04401       ],
                                  "D":[2.70169e-05, 749.26, 1.0,-0.0432061,0.049153      ]},
                          'ccd3':{"A":[2.63179e-05, 836.514, 1.0,-0.0545174,0.0522306    ],
                                  "B":[2.58206e-05, 918.289, 1.0,-0.052097,0.0530815     ],
                                  "C":[2.57241e-05, 819.441, 1.0,-0.0529934,0.053071     ],
                                  "D":[2.58999e-05, 850.556, 1.0,-0.0552855,0.0548873    ],},
                          'ccd4':{"A":[2.68663e-05, 984.241, 1.0,-0.0327376,0.0366624    ],
                                  "B":[2.6579e-05, 992.954, 1.0,-0.0354987,0.0387493     ],
                                  "C":[2.64267e-05, 800.128, 1.0,-0.0409345,0.0463524    ],
                                  "D":[2.58413e-05, 720.125, 1.0,-0.0516081,0.0553248    ]}
                      }
              }
    def __init__(self):
        pass

    def linearity_correct(self,e_in,cam,ccd, channel):
        """
        An FFI in units of electrons is passed in.

        Need to convert back to ADU, scale to 2 seconds, and then apply the polynomial

        """

        cuse = self.coefficients['cam'+str(cam)]['ccd'+str(ccd)][channel]
        guse = GainModel.gains['cam'+str(cam)]['ccd'+str(ccd)][channel]
        scale = cuse[0]
        offset = cuse[1]
        
        x = (e_in/guse - offset)*scale
        return e_in*(cuse[2] + cuse[3]*x/2. + cuse[4]*x**2/3.)


class SpocLinearity_Updated(object):
    """
    For spoc, we need the coefficients of the 2nd order polynomial,
    the scale factor for the input, and the offset of the input
    """
    coefficients ={'cam1':{'ccd1':{"A":[2.57322E-05, 8.23226E+02, 1.00042, -1.77135E-02, 1.60865E-02],
                                   "B":[2.61974E-05, 9.11529E+02, 1.00041, -1.49235E-02, 1.57502E-02],
                                   "C":[2.57796E-05, 8.61398E+02, 1.00035, -1.40579E-02, 1.36767E-02],
                                   "D":[2.60366E-05, 8.91072E+02, 1.00044, -1.69863E-02, 1.38558E-02]},
                           'ccd2':{"A":[2.65022E-05, 1.00389E+03, 1.00060, -1.88487E-02, 2.27920E-02],
                                   "B":[2.61363E-05, 1.01984E+03, 1.00045, -1.41545E-02, 1.78323E-02],
                                   "C":[2.60988E-05, 8.93095E+02, 1.00034, -1.26758E-02, 1.31562E-02],
                                   "D":[2.60189E-05, 8.14683E+02, 1.00042, -1.78210E-02, 1.63361E-02]},
                           'ccd3':{"A":[2.59058E-05, 9.19800E+02, 1.00050, -1.84453E-02, 1.75294E-02],
                                   "B":[2.57147E-05, 9.76537E+02, 1.00050, -1.73996E-02, 1.76234E-02],
                                   "C":[2.57727E-05, 9.00984E+02, 1.00048, -1.84099E-02, 1.52620E-02],
                                   "D":[2.59371E-05, 8.92831E+02, 1.00055, -2.14930E-02, 1.74696E-02]},
                           'ccd4':{"A":[2.68660E-05, 9.81681E+02, 1.00071, -2.38720E-02, 1.87642E-02],
                                   "B":[2.58883E-05, 9.65747E+02, 1.00059, -2.10944E-02, 1.63124E-02], 
                                   "C":[2.60191E-05, 7.75707E+02, 1.00052, -2.35940E-02, 1.67033E-02], 
                                   "D":[2.61775E-05, 6.83515E+02, 1.00045, -2.34144E-02, 1.73236E-02]} 
                       },                
                  'cam2':{'ccd1':{"A":[2.58758E-05, 9.14283E+02, 1.00072, -2.76191E-02, 2.02156E-02],
                                  "B":[2.59669E-05, 9.88901E+02, 1.00060, -2.07197E-02, 1.65676E-02],
                                  "C":[2.61721E-05, 9.52948E+02, 1.00059, -2.13027E-02, 1.46623E-02],
                                  "D":[2.57771E-05, 9.69021E+02, 1.00066, -2.36877E-02, 1.88494E-02]},
                          'ccd2':{"A":[2.70836E-05, 1.04049E+03, 1.00051, -1.50151E-02, 1.92275E-02],
                                  "B":[2.61238E-05, 1.01751E+03, 1.00053, -1.69580E-02, 1.90768E-02],
                                  "C":[2.57524E-05, 9.04560E+02, 1.00052, -1.96853E-02, 2.01241E-02],
                                  "D":[2.57664E-05, 8.40230E+02, 1.00054, -2.24647E-02, 2.02168E-02]},
                          'ccd3':{"A":[2.58508E-05, 9.16877E+02, 1.00063, -2.38069E-02, 1.82370E-02],
                                  "B":[2.56261E-05, 9.75949E+02, 1.00060, -2.13267E-02, 1.73033E-02],
                                  "C":[2.59470E-05, 8.92329E+02, 1.00060, -2.34979E-02, 1.80914E-02],
                                  "D":[2.58622E-05, 9.17551E+02, 1.00064, -2.41073E-02, 1.87316E-02]},
                          'ccd4':{"A":[2.60322E-05, 1.00883E+03, 1.00075, -2.57451E-02, 1.72916E-02],
                                  "B":[2.59428E-05, 1.01374E+03, 1.00069, -2.33682E-02, 1.69955E-02],
                                  "C":[2.57109E-05, 8.36186E+02, 1.00063, -2.69996E-02, 1.84405E-02],
                                  "D":[2.62769E-05, 7.65641E+02, 1.00059, -2.72129E-02, 1.79636E-02]}
                    } ,               
                  'cam3':{'ccd1':{"A":[2.65518E-05, 8.71101E+02, 1.00059, -2.31109E-02, 1.69240E-02],
                                  "B":[2.72475E-05, 9.40163E+02, 1.00065, -2.26606E-02, 1.74296E-02],
                                  "C":[2.57254E-05, 8.97272E+02, 1.00063, -2.49644E-02, 1.82598E-02],
                                  "D":[2.79272E-05, 9.16949E+02, 1.00065, -2.29758E-02, 1.68785E-02]},
                          'ccd2':{"A":[2.61573E-05, 9.83104E+02, 1.00066, -2.22662E-02, 2.13707E-02],
                                  "B":[2.62336E-05, 9.85372E+02, 1.00048, -1.58163E-02, 1.79271E-02],
                                  "C":[2.63870E-05, 8.40470E+02, 1.00053, -2.11018E-02, 2.00090E-02],
                                  "D":[2.62970E-05, 7.68779E+02, 1.00056, -2.52466E-02, 2.13202E-02]},
                          'ccd3':{"A":[2.65843E-05, 8.74064E+02, 1.00057, -2.18179E-02, 2.04309E-02],
                                  "B":[2.69553E-05, 9.56817E+02, 1.00051, -1.71175E-02, 1.70816E-02],
                                  "C":[2.58179E-05, 8.58373E+02, 1.00045, -1.80952E-02, 1.77148E-02],
                                  "D":[2.65562E-05, 8.74340E+02, 1.00062, -2.37400E-02, 2.12487E-02]},
                          'ccd4':{"A":[2.83810E-05, 1.01494E+03, 1.00061, -1.85321E-02, 1.57265E-02],
                                  "B":[2.59052E-05, 9.94259E+02, 1.00054, -1.84040E-02, 1.73544E-02],
                                  "C":[2.59421E-05, 8.13502E+02, 1.00049, -2.12581E-02, 1.65871E-02],
                                  "D":[2.57800E-05, 7.22269E+02, 1.00052, -2.56421E-02, 2.02834E-02]}
                    } ,               
                  'cam4':{'ccd1':{"A":[2.57391E-05, 8.78855E+02, 1.00059, -2.35619E-02, 1.87460E-02],
                                  "B":[2.78096E-05, 9.52233E+02, 1.00036, -1.19072E-02, 1.10209E-02],
                                  "C":[2.56824E-05, 9.01636E+02, 1.00061, -2.37480E-02, 1.88334E-02],
                                  "D":[2.60466E-05, 9.13999E+02, 1.00057, -2.10795E-02, 1.87882E-02]},
                          'ccd2':{"A":[2.69813E-05, 9.77398E+02, 1.00056, -1.88213E-02, 1.41285E-02],
                                  "B":[2.73665E-05, 9.67056E+02, 1.00044, -1.46656E-02, 1.26654E-02],
                                  "C":[2.61286E-05, 8.47830E+02, 1.00046, -1.87306E-02, 1.46700E-02],
                                  "D":[2.70169E-05, 7.49260E+02, 1.00046, -2.06081E-02, 1.63843E-02]},
                          'ccd3':{"A":[2.63179E-05, 8.36514E+02, 1.00063, -2.61088E-02, 1.74102E-02],
                                  "B":[2.58206E-05, 9.18289E+02, 1.00065, -2.47899E-02, 1.76938E-02],
                                  "C":[2.57241E-05, 8.19441E+02, 1.00058, -2.53780E-02, 1.76903E-02],
                                  "D":[2.58999E-05, 8.50556E+02, 1.00064, -2.64336E-02, 1.82958E-02],},
                          'ccd4':{"A":[2.68663E-05, 9.84241E+02, 1.00046, -1.53993E-02, 1.22208E-02],
                                  "B":[2.65790E-05, 9.92954E+02, 1.00050, -1.67267E-02, 1.29164E-02],
                                  "C":[2.64267E-05, 8.00128E+02, 1.00045, -1.94871E-02, 1.54508E-02],
                                  "D":[2.58413E-05, 7.20125E+02, 1.00050, -2.47745E-02, 1.84416E-02]}
                      }
              }
    def __init__(self):
        pass

    def linearity_correct(self,e_in,cam,ccd, channel, N_coadds):
        """
        An FFI in units of electrons is passed in.

        Need to convert back to ADU, scale to 2 seconds, and then apply the polynomial

        """
        cuse = self.coefficients['cam'+str(cam)]['ccd'+str(ccd)][channel]
        guse = GainModel.gains['cam'+str(cam)]['ccd'+str(ccd)][channel]
        scale = cuse[0]
        offset = cuse[1]

        x = (e_in/N_coadds/0.99/guse - offset)*scale
        return e_in*(cuse[2] + cuse[3]*x + cuse[4]*x**2)

