#!/usr/bin/env bash


SECTOR=''
REFFIN=''
dstem=''


USAGE="
  Usage: tica-wcs-step1-allcam-allccd SECTOR=<sector> REFFIN=<ffi_cad> dstem=<data_dir_path> 

  This script sets up directories and runs
    step1_get_refimg_ctrlpts.py.  step1_get_refimg_ctrlpts.py is a
    python script that runs astroquery, identifies bright and
    relatively uncrowded stars in a reference FFI, and writes .h5
    files tabulating good stars for the World Coordinate Solution.
    The .h5 files contains a table of stars with RA and DEC values
    that can be used to fit the WCS, which are necessary for
    tica-wcs-step2-allcam-allccd and step2_mkwcs.py.

  This script assumes that all FFIs are saved under TSO formats and
    naming conventions (see the tica-calibrate-tso help menu).  The
    .h5 files use TSO naming conventions.

  The TSO format FFI files are not publicly available at this time.
    See tica-calibrate-spoc and tica-wcs-spoc for the scripts that run
    TICA on publicly available SPOC FFIs.

  <sector> is a two digit integer.  It is used in calls to the
    tess-point python package, in order to convert row/col to ra/dec.

  <ffi_cad> is a reference cadence, either FIN or TIN for TSO format
    FFIs.  The corresponding FFI for this epoch should be free from
    scattered light in order to identify suitable stars for the
    WCS. This script assumes the FIN or TIN is in the file name, as
    for TSO format FITS files.

  <data_dir_path> is the directory where the FFIs are saved.
    Currently, this script assumes that 16 directories exist, with
    naming convention /data_dir_path/cam\$i_ccd\$j/.  This script will
    make a directory /data_dir_path/refout, and saves the .h5 files
    there.

"
[ $# -eq 0 ] && { echo "$USAGE" ; exit ; }

while [ $# -gt 0 ] ; do
  case $1 in
    "-h" | "--help") echo "$USAGE" ; exit  ;;
    *)         eval $1 ;;
  esac
  shift
done


#check that all variables are set
[[ $SECTOR == '' ]] && { echo "$USAGE" ; echo "set sector to a two digit integer : SECTOR=<\d\d>" ; exit ; }
[[ $REFFIN == '' ]] && { echo "$USAGE" ; echo "set reffin to an FFI_INDEX, which appears in the FFI file's name: reffin=<\d\d\d\d\d\d>" ; exit ; }
[[ $dstem == '' ]] &&  { echo "$USAGE" ; echo "set dstem to the location of the data: dstem=<path_to_data>" ;  exit ; }


# TICA
if [ -d "$dstem""/refout" ]; then
   echo "refout exists"
else
    mkdir "$dstem""/refout"
fi


DEBUGIT=2


for ((iCam = 1 ; iCam <= 4 ; iCam++)); do
  for ((jCcd = 1; jCcd <=4 ; jCcd++)); do
      USE_REF=$(ls "$dstem""cam$iCam""_ccd$jCcd""/tess"*"$REFFIN"*)
      USE_OUT="$dstem""refout/reftica_s$SECTOR""_$iCam""-$jCcd"".h5"

      #echo ${USE_REF}
      #echo ${USE_OUT}
      
      if [ -e $USE_OUT ]; then
	  echo "skipping $USE_OUT; already exists"
	  continue
      fi

      #assumes setup.py will install step1_get_refimg_ctrlpts.py into path
      step1_get_refimg_ctrlpts.py -s ${SECTOR} -ca ${iCam} -cd ${jCcd} -ri ${USE_REF} -o ${USE_OUT} -dbg ${DEBUGIT} -l tica_logs/tica_wcs_step1_cam"$iCam"_ccd"$jCcd".log &
  done
done
wait

